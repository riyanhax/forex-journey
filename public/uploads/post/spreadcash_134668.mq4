/*
   Generated by EX4-TO-MQ4 decompiler LITE V4.0.409.1f [-]
   Website: https://purebeam.biz
   E-mail : purebeam@gmail.com
*/
#property copyright "Copyright © 2010, spreadcash.com"
#property link      "spreadcash.com"


extern double RiskPercent = 25.0;
extern double LotMultiplicator = 1.4;
extern int TakeProfit = 30;
extern int ProtectionTP = 10;
extern int Magic = 615;
extern int Slippage = 1;
extern bool ShowTableOnTesting = TRUE;
double gd_116 = 100.0;
//int gi_76 = 134668;
int gi_124 = 0;
double gd_128;
int gi_136;
string gs_140 = "lblfin_";
int gi_148 = 1;
int gi_152 = 1;
int gi_156 = 1;
double gd_160 = 0.1;
bool gi_168;
bool gi_172;
bool gi_176;
bool gi_180;

void init() {
   gi_168 = FALSE;
   gi_172 = FALSE;
   gi_176 = FALSE;
   gi_180 = FALSE;
   double ld_0 = MarketInfo(Symbol(), MODE_LOTSTEP);
   gd_160 = MarketInfo(Symbol(), MODE_MINLOT);
   gi_156 = 0;
   if (ld_0 == 0.01) gi_156 = 2;
   else gi_156 = 1;
   gi_148 = 2 * Magic;
   gi_152 = Magic * 2 + 1;
   gd_128 = Ask - Bid;
   gi_136 = NormalizeDouble(gd_128 / Point, 0);
   if (Digits == 5 || Digits == 3) {
      TakeProfit = 10 * TakeProfit;
      ProtectionTP = 10 * ProtectionTP;
   }
   Comment("");
}

void deinit() {
   Comment("");
}

int start() {
   double ld_0;
   double ld_8;
   double ld_16;
   double ld_24;
   double ld_32;
   double ld_40;
   double ld_48;
   double ld_56;
   double ld_64;
   double ld_72;
   double ld_80;
   //if (AccountNumber() != 134668 && (!IsDemo())) {
     // Comment("Советник может работать только на счёте " + gi_76 + ", для бесплатного подключения к другому счёту перейдите на сайт spreadcash.com");
    //  return;
   //}
   if (((!IsOptimization()) && !IsTesting() && (!IsVisualMode())) || (ShowTableOnTesting && IsTesting() && (!IsOptimization()))) {
      f0_18();
      f0_13();
   }
   gi_124 = AccountBalance() / 100.0 * gd_116 / (MarketInfo(Symbol(), MODE_TICKVALUE) * f0_26());
   if (gi_124 > 5000) gi_124 = 5000;
   if (AccountBalance() - AccountEquity() > AccountBalance() / 100.0 * gd_116) {
      f0_25();
      f0_8();
   }
   int li_88 = f0_5(gi_148);
   int li_92 = f0_0(gi_148);
   int li_96 = f0_7(gi_148);
   int li_100 = f0_9(gi_148);
   int li_104 = f0_21(gi_148);
   int li_108 = f0_14(gi_148);
   int li_112 = f0_5(gi_152);
   int li_116 = f0_0(gi_152);
   int li_120 = f0_7(gi_152);
   int li_124 = f0_9(gi_152);
   int li_128 = f0_21(gi_152);
   int li_132 = f0_14(gi_152);
   if (li_88 == 0 && li_92 == 0 && li_96 == 0 && li_100 == 0 && li_104 == 0 && li_108 == 0 && li_112 == 0 && li_116 == 0 && li_120 == 0 && li_124 == 0 && li_128 == 0 &&
      li_132 == 0) {
      ld_0 = f0_26();
      f0_16(ld_0, TakeProfit, gi_148);
      f0_19(ld_0, TakeProfit, gi_148);
   } else {
      if (li_88 == 0 && li_92 == 0 && (li_112 == 0 && li_116 == 0)) {
         f0_20(gi_148);
         f0_20(gi_152);
      } else {
         if (li_88 == 0 && li_92 == 0 && (li_112 == 1 && li_116 == 1) && li_96 != 0 || li_100 != 0 || li_104 != 0 || li_108 != 0) f0_20(gi_148);
         else {
            if (li_112 == 0 && li_116 == 0 && (li_88 == 1 && li_92 == 1) && li_120 != 0 || li_124 != 0 || li_128 != 0 || li_132 != 0) f0_20(gi_152);
            else {
               if (li_88 > 0 && li_116 == 0 || li_116 == 1) {
                  if (li_96 == 0 && li_108 == 0) {
                     f0_2(ld_16, ld_24, ld_32, ld_40, gi_148);
                     gi_124 = AccountBalance() / 100.0 * gd_116 / (MarketInfo(Symbol(), MODE_TICKVALUE) * ld_40 * LotMultiplicator);
                     if (gi_124 > 5000) gi_124 = 5000;
                     f0_15(ld_32 + TakeProfit * Point + gd_128, NormalizeDouble(ld_40 * LotMultiplicator, gi_156), TakeProfit, gi_124 - gi_136, gi_148);
                     f0_17(ld_32 + TakeProfit * Point, NormalizeDouble(ld_40 * LotMultiplicator, gi_156), 0, gi_124, gi_148);
                     ld_48 = f0_6(gi_148);
                     if (ld_48 != -1.0) {
                        ld_8 = ld_48 - ProtectionTP * Point;
                        f0_23(ld_8, gi_148);
                        f0_4(ld_8 + gd_128, gi_148);
                     }
                  }
                  if ((li_96 == 0 && li_108 == 0) || (gi_176 != FALSE && gi_180 != FALSE && li_112 == 0 && li_116 == 0)) {
                     if (li_92 > 1) {
                        f0_2(ld_16, ld_24, ld_32, ld_40, gi_148);
                        if (li_112 == 0 && li_116 == 0 && li_124 == 0 && li_128 == 0) {
                           ld_0 = f0_26();
                           f0_10(ld_32 - TakeProfit * Point - gd_128, ld_0, TakeProfit, TakeProfit + gi_136 * 2, gi_152);
                           f0_11(ld_32 - TakeProfit * Point, ld_0, TakeProfit, 0, gi_152);
                        } else {
                           if (li_112 == 0 && li_116 == 0 && li_124 != 0 && li_128 != 0) {
                              f0_20(gi_152);
                              ld_0 = f0_26();
                              f0_10(ld_32 - TakeProfit * Point - gd_128, ld_0, TakeProfit, TakeProfit + gi_136 * 2, gi_152);
                              f0_11(ld_32 - TakeProfit * Point, ld_0, TakeProfit, 0, gi_152);
                           }
                        }
                     }
                  }
               }
               li_88 = f0_5(gi_148);
               li_92 = f0_0(gi_148);
               li_96 = f0_7(gi_148);
               li_100 = f0_9(gi_148);
               li_104 = f0_21(gi_148);
               li_108 = f0_14(gi_148);
               li_112 = f0_5(gi_152);
               li_116 = f0_0(gi_152);
               li_120 = f0_7(gi_152);
               li_124 = f0_9(gi_152);
               li_128 = f0_21(gi_152);
               li_132 = f0_14(gi_152);
               if (li_92 > 0 && li_112 == 0 || li_112 == 1) {
                  if (li_100 == 0 && li_104 == 0) {
                     f0_1(ld_56, ld_64, ld_72, ld_80, gi_148);
                     gi_124 = AccountBalance() / 100.0 * gd_116 / (MarketInfo(Symbol(), MODE_TICKVALUE) * ld_80 * LotMultiplicator);
                     if (gi_124 > 5000) gi_124 = 5000;
                     f0_10(ld_72 - TakeProfit * Point - gd_128, NormalizeDouble(ld_80 * LotMultiplicator, gi_156), TakeProfit, gi_124 + gi_136, gi_148);
                     f0_11(ld_72 - TakeProfit * Point, NormalizeDouble(ld_80 * LotMultiplicator, gi_156), 0, gi_124, gi_148);
                     ld_48 = f0_6(gi_148);
                     if (ld_48 != -1.0) {
                        ld_8 = ld_48 + ProtectionTP * Point;
                        f0_24(ld_8, gi_148);
                        f0_28(ld_8 + gd_128, gi_148);
                     }
                  }
                  if ((li_100 == 0 && li_104 == 0) || (gi_176 != FALSE && gi_180 != FALSE && li_112 == 0 && li_116 == 0)) {
                     if (li_88 > 1) {
                        f0_1(ld_56, ld_64, ld_72, ld_80, gi_148);
                        if (li_112 == 0 && li_116 == 0 && li_120 == 0 && li_132 == 0) {
                           ld_0 = f0_26();
                           f0_15(ld_72 + TakeProfit * Point + gd_128, ld_0, TakeProfit - gi_136, TakeProfit + gi_136 * 2, gi_152);
                           f0_17(ld_72 + TakeProfit * Point, ld_0, TakeProfit, 0, gi_152);
                        } else {
                           if (li_112 == 0 && li_116 == 0 && li_120 != 0 && li_132 != 0) {
                              f0_20(gi_152);
                              ld_0 = f0_26();
                              f0_15(ld_72 + TakeProfit * Point + gd_128, ld_0, TakeProfit - gi_136, TakeProfit + gi_136 * 2, gi_152);
                              f0_17(ld_72 + TakeProfit * Point, ld_0, TakeProfit, 0, gi_152);
                           }
                        }
                     }
                  }
               }
               li_88 = f0_5(gi_148);
               li_92 = f0_0(gi_148);
               li_96 = f0_7(gi_148);
               li_100 = f0_9(gi_148);
               li_104 = f0_21(gi_148);
               li_108 = f0_14(gi_148);
               li_112 = f0_5(gi_152);
               li_116 = f0_0(gi_152);
               li_120 = f0_7(gi_152);
               li_124 = f0_9(gi_152);
               li_128 = f0_21(gi_152);
               li_132 = f0_14(gi_152);
               if (li_112 > 0 && li_92 == 0 || li_92 == 1) {
                  if (li_120 == 0 && li_132 == 0) {
                     f0_2(ld_16, ld_24, ld_32, ld_40, gi_152);
                     gi_124 = AccountBalance() / 100.0 * gd_116 / (MarketInfo(Symbol(), MODE_TICKVALUE) * ld_40 * LotMultiplicator);
                     if (gi_124 > 5000) gi_124 = 5000;
                     f0_15(ld_32 + TakeProfit * Point + gd_128, NormalizeDouble(ld_40 * LotMultiplicator, gi_156), TakeProfit, gi_124 - gi_136, gi_152);
                     f0_17(ld_32 + TakeProfit * Point, NormalizeDouble(ld_40 * LotMultiplicator, gi_156), 0, gi_124, gi_152);
                     ld_48 = f0_6(gi_152);
                     if (ld_48 != -1.0) {
                        ld_8 = ld_48 - ProtectionTP * Point;
                        f0_23(ld_8, gi_152);
                        f0_4(ld_8 + gd_128, gi_152);
                     }
                  }
                  if ((li_120 == 0 && li_132 == 0) || (gi_168 != FALSE && gi_172 != FALSE && li_88 == 0 && li_92 == 0)) {
                     if (li_116 > 1) {
                        f0_2(ld_16, ld_24, ld_32, ld_40, gi_152);
                        if (li_88 == 0 && li_92 == 0 && li_100 == 0 && li_104 == 0) {
                           ld_0 = f0_26();
                           f0_10(ld_32 - TakeProfit * Point - gd_128, ld_0, TakeProfit, TakeProfit + gi_136 * 2, gi_148);
                           f0_11(ld_32 - TakeProfit * Point, ld_0, TakeProfit, 0, gi_148);
                        } else {
                           if (li_88 == 0 && li_92 == 0 && li_100 != 0 && li_104 != 0) {
                              f0_20(gi_148);
                              ld_0 = f0_26();
                              f0_10(ld_32 - TakeProfit * Point - gd_128, ld_0, TakeProfit, TakeProfit + gi_136 * 2, gi_148);
                              f0_11(ld_32 - TakeProfit * Point, ld_0, TakeProfit, 0, gi_148);
                           }
                        }
                     }
                  }
               }
               li_88 = f0_5(gi_148);
               li_92 = f0_0(gi_148);
               li_96 = f0_7(gi_148);
               li_100 = f0_9(gi_148);
               li_104 = f0_21(gi_148);
               li_108 = f0_14(gi_148);
               li_112 = f0_5(gi_152);
               li_116 = f0_0(gi_152);
               li_120 = f0_7(gi_152);
               li_124 = f0_9(gi_152);
               li_128 = f0_21(gi_152);
               li_132 = f0_14(gi_152);
               if (li_116 > 0 && li_88 == 0 || li_88 == 1) {
                  if (li_124 == 0 && li_128 == 0) {
                     f0_1(ld_56, ld_64, ld_72, ld_80, gi_152);
                     gi_124 = AccountBalance() / 100.0 * gd_116 / (MarketInfo(Symbol(), MODE_TICKVALUE) * ld_80 * LotMultiplicator);
                     if (gi_124 > 5000) gi_124 = 5000;
                     f0_10(ld_72 - TakeProfit * Point - gd_128, NormalizeDouble(ld_80 * LotMultiplicator, gi_156), TakeProfit, gi_124 + gi_136, gi_152);
                     f0_11(ld_72 - TakeProfit * Point, NormalizeDouble(ld_80 * LotMultiplicator, gi_156), 0, gi_124, gi_152);
                     ld_48 = f0_6(gi_152);
                     if (ld_48 != -1.0) {
                        ld_8 = ld_48 + ProtectionTP * Point;
                        f0_24(ld_8, gi_152);
                        f0_28(ld_8 + gd_128, gi_152);
                     }
                  }
                  if ((li_124 == 0 && li_128 == 0) || (gi_168 != FALSE && gi_172 != FALSE && li_88 == 0 && li_92 == 0)) {
                     if (li_112 > 1) {
                        f0_1(ld_56, ld_64, ld_72, ld_80, gi_152);
                        if (li_88 == 0 && li_92 == 0 && li_96 == 0 && li_108 == 0) {
                           ld_0 = f0_26();
                           f0_15(ld_72 + TakeProfit * Point + gd_128, ld_0, TakeProfit - gi_136, TakeProfit + gi_136 * 2, gi_148);
                           f0_17(ld_72 + TakeProfit * Point, ld_0, TakeProfit, 0, gi_148);
                        } else {
                           if (li_88 == 0 && li_92 == 0 && li_96 != 0 && li_108 != 0) {
                              f0_20(gi_148);
                              ld_0 = f0_26();
                              f0_15(ld_72 + TakeProfit * Point + gd_128, ld_0, TakeProfit - gi_136, TakeProfit + gi_136 * 2, gi_148);
                              f0_17(ld_72 + TakeProfit * Point, ld_0, TakeProfit, 0, gi_148);
                           }
                        }
                     }
                  }
               }
            }
         }
      }
   }
   gi_168 = li_88;
   gi_172 = li_92;
   gi_176 = li_112;
   gi_180 = li_116;
   return (0);
}

int f0_5(int ai_0) {
   int li_4 = 0;
   for (int li_8 = 0; li_8 < OrdersTotal(); li_8++) {
      if (!(OrderSelect(li_8, SELECT_BY_POS, MODE_TRADES))) break;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == ai_0 && OrderType() == OP_BUY) li_4++;
   }
   return (li_4);
}

int f0_0(int ai_0) {
   int li_4 = 0;
   for (int li_8 = 0; li_8 < OrdersTotal(); li_8++) {
      if (!(OrderSelect(li_8, SELECT_BY_POS, MODE_TRADES))) break;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == ai_0 && OrderType() == OP_SELL) li_4++;
   }
   return (li_4);
}

int f0_7(int ai_0) {
   int li_4 = 0;
   for (int li_8 = 0; li_8 < OrdersTotal(); li_8++) {
      if (!(OrderSelect(li_8, SELECT_BY_POS, MODE_TRADES))) break;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == ai_0 && OrderType() == OP_BUYSTOP) li_4++;
   }
   return (li_4);
}

int f0_9(int ai_0) {
   int li_4 = 0;
   for (int li_8 = 0; li_8 < OrdersTotal(); li_8++) {
      if (!(OrderSelect(li_8, SELECT_BY_POS, MODE_TRADES))) break;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == ai_0 && OrderType() == OP_SELLSTOP) li_4++;
   }
   return (li_4);
}

int f0_21(int ai_0) {
   int li_4 = 0;
   for (int li_8 = 0; li_8 < OrdersTotal(); li_8++) {
      if (!(OrderSelect(li_8, SELECT_BY_POS, MODE_TRADES))) break;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == ai_0 && OrderType() == OP_BUYLIMIT) li_4++;
   }
   return (li_4);
}

int f0_14(int ai_0) {
   int li_4 = 0;
   for (int li_8 = 0; li_8 < OrdersTotal(); li_8++) {
      if (!(OrderSelect(li_8, SELECT_BY_POS, MODE_TRADES))) break;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == ai_0 && OrderType() == OP_SELLLIMIT) li_4++;
   }
   return (li_4);
}

void f0_20(int ai_0) {
   for (int li_4 = OrdersTotal() - 1; li_4 >= 0; li_4--) {
      if (!(OrderSelect(li_4, SELECT_BY_POS, MODE_TRADES))) break;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == ai_0 && OrderType() == OP_SELLSTOP || OrderType() == OP_BUYSTOP || OrderType() == OP_BUYLIMIT || OrderType() == OP_SELLLIMIT) {
         while (IsTradeContextBusy()) Sleep(500);
         Print("Удаляем ордер #" + OrderTicket() + ".");
         if (!OrderDelete(OrderTicket())) Print("Не удалось удалить ордер #" + OrderTicket() + ". Ошибка: ");
      }
   }
}

void f0_10(double ad_0, double ad_8, int ai_16, int ai_20, int ai_24) {
   double ld_28;
   double ld_36;
   int li_44;
   if (ai_20 != 0) ld_28 = ad_0 + ai_20 * Point;
   if (ai_16 != 0) ld_36 = ad_0 - ai_16 * Point;
   int li_48 = OrderSend(Symbol(), OP_SELLSTOP, ad_8, ad_0, Slippage, ld_28, ld_36, "", ai_24, 0, Red);
   if (li_48 < 1) {
      li_44 = GetLastError();
      Print("Не удалось установить отложенный ордер SELLSTOP объемом ");
      Print(Bid + " " + ad_0 + " " + ld_28 + " " + ld_36);
   }
}

void f0_15(double ad_0, double ad_8, int ai_16, int ai_20, int ai_24) {
   double ld_28;
   double ld_36;
   int li_44;
   if (ai_20 != 0) ld_28 = ad_0 - ai_20 * Point;
   if (ai_16 != 0) ld_36 = ad_0 + ai_16 * Point;
   int li_48 = OrderSend(Symbol(), OP_BUYSTOP, ad_8, ad_0, Slippage, ld_28, ld_36, "", ai_24, 0, Blue);
   if (li_48 < 1) {
      li_44 = GetLastError();
      Print("Не удалось установить отложенный ордер BUYSTOP объемом " + ad_8 + ". Ошибка #");
      Print(Bid + " " + ad_0 + " " + ld_28 + " " + ld_36);
   }
}

void f0_17(double ad_0, double ad_8, int ai_16, int ai_20, int ai_24) {
   double ld_28;
   int li_36;
   double ld_40 = 0;
   if (ai_20 != 0) ld_40 = ad_0 + ai_20 * Point;
   if (ai_16 != 0) ld_28 = ad_0 - ai_16 * Point;
   int li_48 = OrderSend(Symbol(), OP_SELLLIMIT, ad_8, ad_0, Slippage, ld_40, ld_28, "", ai_24, 0, CLR_NONE);
   if (li_48 < 1) {
      li_36 = GetLastError();
      Print("Не удалось установить отложенный ордер SELLLIMIT объемом " + ad_8 + ". Ошибка #");
      Print(Bid + " " + ad_0 + " " + ld_40 + " " + ld_28);
   }
}

void f0_11(double ad_0, double ad_8, int ai_16, int ai_20, int ai_24) {
   double ld_28;
   int li_36;
   double ld_40 = 0;
   if (ai_20 != 0) ld_40 = ad_0 - ai_20 * Point;
   if (ai_16 != 0) ld_28 = ad_0 + ai_16 * Point;
   int li_48 = OrderSend(Symbol(), OP_BUYLIMIT, ad_8, ad_0, Slippage, ld_40, ld_28, "", ai_24, 0, CLR_NONE);
   if (li_48 < 1) {
      li_36 = GetLastError();
      Print("Не удалось установить отложенный ордер BUYLIMIT объемом " + ad_8 + ". Ошибка #");
      Print(Bid + " " + ad_0 + " " + ld_40 + " " + ld_28);
   }
}

void f0_16(double ad_0, int ai_8, int ai_12) {
   int li_16;
   int li_20 = OrdersTotal();
   double ld_24 = 0;
   double ld_32 = 0;
   RefreshRates();
   double ld_40 = Ask;
   if (ai_8 != 0) ld_24 = ld_40 + ai_8 * Point;
   if (gi_124 != 0) ld_32 = ld_40 - gi_124 * Point;
   int li_48 = TimeCurrent();
   int li_52 = OrderSend(Symbol(), OP_BUY, ad_0, ld_40, Slippage, ld_32, ld_24, "", ai_12, 0, Blue);
   if (li_52 == -1) {
      while (li_52 == -1 && TimeCurrent() - li_48 < 40 && !IsTesting()) {
         li_16 = GetLastError();
         Print("Ошибка открытия ордера BUY. ");
         Sleep(100);
         Print("Повтор");
         RefreshRates();
         ld_40 = Ask;
         if (ai_8 != 0) ld_24 = ld_40 + ai_8 * Point;
         if (gi_124 != 0) ld_32 = ld_40 - gi_124 * Point;
         li_52 = OrderSend(Symbol(), OP_BUY, ad_0, ld_40, Slippage, ld_32, ld_24, "", ai_12, 0, Blue);
      }
      if (li_52 == -1) {
         li_16 = GetLastError();
         Print("Ошибка открытия ордера BUY. ");
      }
   }
   if (li_52 != -1) Print("Открыто BUY на " + Symbol() + " " + Period() + " объемом " + ad_0 + "!");
}

void f0_19(double ad_0, int ai_8, int ai_12) {
   int li_16;
   int li_20 = OrdersTotal();
   double ld_24 = 0;
   double ld_32 = 0;
   RefreshRates();
   double ld_40 = Bid;
   if (ai_8 != 0) ld_24 = ld_40 - ai_8 * Point;
   if (gi_124 != 0) ld_32 = ld_40 + gi_124 * Point;
   int li_48 = TimeCurrent();
   int li_52 = OrderSend(Symbol(), OP_SELL, ad_0, ld_40, Slippage, ld_32, ld_24, "", ai_12, 0, Red);
   if (li_52 == -1) {
      while (li_52 == -1 && TimeCurrent() - li_48 < 40 && !IsTesting()) {
         li_16 = GetLastError();
         Print("Ошибка открытия ордера SELL. ");
         Sleep(100);
         Print("Повтор");
         RefreshRates();
         ld_40 = Bid;
         if (ai_8 != 0) ld_24 = ld_40 - ai_8 * Point;
         if (gi_124 != 0) ld_32 = ld_40 + gi_124 * Point;
         li_52 = OrderSend(Symbol(), OP_SELL, ad_0, ld_40, Slippage, ld_32, ld_24, "", ai_12, 0, Red);
      }
      if (li_52 == -1) {
         li_16 = GetLastError();
         Print("Ошибка открытия ордера SELL. ");
      }
   }
   if (li_52 != -1) Print("Открыто SELL на " + Symbol() + " " + Period() + " объемом " + ad_0 + "!");
}

void f0_24(double ad_0, int ai_8) {
   for (int li_12 = 0; li_12 < OrdersTotal(); li_12++) {
      if (!(OrderSelect(li_12, SELECT_BY_POS, MODE_TRADES))) break;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == ai_8 && OrderType() == OP_BUY) {
         if (!OrderModify(OrderTicket(), OrderOpenPrice(), OrderStopLoss(), ad_0, OrderExpiration(), HotPink)) {
            Print("Не удалось модифицировать ордер #" + OrderTicket() + ". Ошибка:");
            Print("SL=" + OrderStopLoss() + " TP=" + ad_0);
         }
      }
   }
}

void f0_23(double ad_0, int ai_8) {
   for (int li_12 = 0; li_12 < OrdersTotal(); li_12++) {
      if (!(OrderSelect(li_12, SELECT_BY_POS, MODE_TRADES))) break;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == ai_8 && OrderType() == OP_BUY) {
         if (!OrderModify(OrderTicket(), OrderOpenPrice(), ad_0, OrderTakeProfit(), OrderExpiration(), HotPink)) {
            Print("Не удалось модифицировать ордер #" + OrderTicket() + ". Ошибка:");
            Print("SL=" + ad_0 + " TP=" + OrderTakeProfit());
         }
      }
   }
}

void f0_4(double ad_0, int ai_8) {
   for (int li_12 = 0; li_12 < OrdersTotal(); li_12++) {
      if (!(OrderSelect(li_12, SELECT_BY_POS, MODE_TRADES))) break;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == ai_8 && OrderType() == OP_SELL) {
         if (!OrderModify(OrderTicket(), OrderOpenPrice(), OrderStopLoss(), ad_0, OrderExpiration(), HotPink)) {
            Print("Не удалось модифицировать ордер #" + OrderTicket() + ". Ошибка:");
            Print("SL=" + OrderStopLoss() + " TP=" + ad_0);
         }
      }
   }
}

void f0_28(double ad_0, int ai_8) {
   for (int li_12 = 0; li_12 < OrdersTotal(); li_12++) {
      if (!(OrderSelect(li_12, SELECT_BY_POS, MODE_TRADES))) break;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == ai_8 && OrderType() == OP_SELL) {
         if (!OrderModify(OrderTicket(), OrderOpenPrice(), ad_0, OrderTakeProfit(), OrderExpiration(), HotPink)) {
            Print("Не удалось модифицировать ордер #" + OrderTicket() + ". Ошибка:");
            Print("SL=" + ad_0 + " TP=" + OrderTakeProfit());
         }
      }
   }
}

double f0_6(int ai_0) {
   double ld_4 = NormalizeDouble(f0_22(ai_0), 2);
   double ld_12 = NormalizeDouble(f0_3(ai_0), 2);
   double ld_20 = ld_4 - ld_12;
   double ld_28 = -1;
   if (ld_20 == 0.0) ld_28 = -1;
   else ld_28 = f0_27(ai_0) / ld_20;
   return (NormalizeDouble(ld_28, Digits));
}

double f0_27(int ai_0) {
   double ld_4;
   for (int li_12 = 0; li_12 <= OrdersTotal(); li_12++) {
      OrderSelect(li_12, SELECT_BY_POS);
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == ai_0 && OrderType() == OP_SELL) ld_4 -= OrderLots() * OrderOpenPrice();
      else
         if (OrderSymbol() == Symbol() && OrderMagicNumber() == ai_0 && OrderType() == OP_BUY) ld_4 += OrderLots() * OrderOpenPrice();
   }
   return (ld_4);
}

double f0_3(int ai_0) {
   int li_4 = OrdersTotal();
   double ld_8 = 0;
   for (int li_16 = 0; li_16 < li_4; li_16++) {
      OrderSelect(li_16, SELECT_BY_POS, MODE_TRADES);
      if (OrderType() == OP_SELL && OrderSymbol() == Symbol() && OrderMagicNumber() == ai_0) ld_8 += OrderLots();
   }
   return (ld_8);
}

double f0_22(int ai_0) {
   int li_4 = OrdersTotal();
   double ld_8 = 0;
   for (int li_16 = 0; li_16 < li_4; li_16++) {
      OrderSelect(li_16, SELECT_BY_POS, MODE_TRADES);
      if (OrderType() == OP_BUY && OrderSymbol() == Symbol() && OrderMagicNumber() == ai_0) ld_8 += OrderLots();
   }
   return (ld_8);
}

void f0_2(double &ad_0, double &ad_8, double &ad_16, double &ad_24, int ai_32) {
   ad_16 = 0;
   for (int li_36 = 0; li_36 < OrdersTotal(); li_36++) {
      if (!(OrderSelect(li_36, SELECT_BY_POS, MODE_TRADES))) break;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == ai_32 && OrderType() == OP_BUY && OrderOpenPrice() > ad_16) {
         ad_16 = OrderOpenPrice();
         ad_0 = OrderTakeProfit();
         ad_8 = OrderStopLoss();
         ad_24 = OrderLots();
      }
   }
}

void f0_1(double &ad_0, double &ad_8, double &ad_16, double &ad_24, int ai_32) {
   ad_16 = 1410065407;
   for (int li_36 = 0; li_36 < OrdersTotal(); li_36++) {
      if (!(OrderSelect(li_36, SELECT_BY_POS, MODE_TRADES))) break;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == ai_32 && OrderType() == OP_SELL && OrderOpenPrice() < ad_16) {
         ad_16 = OrderOpenPrice();
         ad_0 = OrderTakeProfit();
         ad_8 = OrderStopLoss();
         ad_24 = OrderLots();
      }
   }
}

double f0_12(int ai_0) {
   double ld_4 = 0;
   for (int li_12 = 0; li_12 < OrdersHistoryTotal(); li_12++) {
      if (!(OrderSelect(li_12, SELECT_BY_POS, MODE_HISTORY))) break;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == gi_148 || OrderMagicNumber() == gi_152)
         if (OrderCloseTime() >= iTime(Symbol(), PERIOD_D1, ai_0) && OrderCloseTime() < iTime(Symbol(), PERIOD_D1, ai_0) + 86400) ld_4 += OrderProfit();
   }
   return (ld_4);
}

void f0_18() {
   double ld_0 = f0_12(0);
   string ls_8 = gs_140 + "1";
   if (ObjectFind(ls_8) == -1) {
      ObjectCreate(ls_8, OBJ_LABEL, 0, 0, 0);
      ObjectSet(ls_8, OBJPROP_CORNER, 1);
      ObjectSet(ls_8, OBJPROP_XDISTANCE, 100);
      ObjectSet(ls_8, OBJPROP_YDISTANCE, 15);
   }
   ObjectSetText(ls_8, "Заработок сегодня: " + DoubleToStr(ld_0, 2), 12, "Courier New", Turquoise);
   ld_0 = f0_12(1);
   ls_8 = gs_140 + "2";
   if (ObjectFind(ls_8) == -1) {
      ObjectCreate(ls_8, OBJ_LABEL, 0, 0, 0);
      ObjectSet(ls_8, OBJPROP_CORNER, 1);
      ObjectSet(ls_8, OBJPROP_XDISTANCE, 100);
      ObjectSet(ls_8, OBJPROP_YDISTANCE, 30);
   }
   ObjectSetText(ls_8, "Заработок вчера: " + DoubleToStr(ld_0, 2), 12, "Courier New", Turquoise);
   ld_0 = f0_12(2);
   ls_8 = gs_140 + "3";
   if (ObjectFind(ls_8) == -1) {
      ObjectCreate(ls_8, OBJ_LABEL, 0, 0, 0);
      ObjectSet(ls_8, OBJPROP_CORNER, 1);
      ObjectSet(ls_8, OBJPROP_XDISTANCE, 100);
      ObjectSet(ls_8, OBJPROP_YDISTANCE, 45);
   }
   ObjectSetText(ls_8, "Заработок позавчера: " + DoubleToStr(ld_0, 2), 12, "Courier New", Turquoise);
   ls_8 = gs_140 + "4";
   if (ObjectFind(ls_8) == -1) {
      ObjectCreate(ls_8, OBJ_LABEL, 0, 0, 0);
      ObjectSet(ls_8, OBJPROP_CORNER, 1);
      ObjectSet(ls_8, OBJPROP_XDISTANCE, 100);
      ObjectSet(ls_8, OBJPROP_YDISTANCE, 75);
   }
   ObjectSetText(ls_8, "Баланс: " + DoubleToStr(AccountBalance(), 2), 14, "Courier New", Turquoise);
}

double f0_26() {
   double ld_0 = NormalizeDouble(MathFloor(AccountBalance() / 100.0 * gd_116 * RiskPercent / 100.0) / 10000.0, gi_156);
   if (ld_0 < gd_160) ld_0 = gd_160;
   return (ld_0);
}

void f0_13() {
   string ls_0 = gs_140 + "L_1";
   if (ObjectFind(ls_0) == -1) {
      ObjectCreate(ls_0, OBJ_LABEL, 0, 0, 0);
      ObjectSet(ls_0, OBJPROP_CORNER, 0);
      ObjectSet(ls_0, OBJPROP_XDISTANCE, 390);
      ObjectSet(ls_0, OBJPROP_YDISTANCE, 10);
   }
   ObjectSetText(ls_0, "SPREADCASH", 28, "Comic Sans MS", LightSeaGreen);
   ls_0 = gs_140 + "L_2";
   if (ObjectFind(ls_0) == -1) {
      ObjectCreate(ls_0, OBJ_LABEL, 0, 0, 0);
      ObjectSet(ls_0, OBJPROP_CORNER, 0);
      ObjectSet(ls_0, OBJPROP_XDISTANCE, 478);
      ObjectSet(ls_0, OBJPROP_YDISTANCE, 47);
   }
   ObjectSetText(ls_0, ".COM", 16, "Comic Sans MS", LightSeaGreen);
   ls_0 = gs_140 + "L_3";
   if (ObjectFind(ls_0) == -1) {
      ObjectCreate(ls_0, OBJ_LABEL, 0, 0, 0);
      ObjectSet(ls_0, OBJPROP_CORNER, 0);
      ObjectSet(ls_0, OBJPROP_XDISTANCE, 393);
      ObjectSet(ls_0, OBJPROP_YDISTANCE, 78);
   }
   ObjectSetText(ls_0, "spreadcash.com", 12, "Courier New", Turquoise);
   ls_0 = gs_140 + "L_4";
   if (ObjectFind(ls_0) == -1) {
      ObjectCreate(ls_0, OBJ_LABEL, 0, 0, 0);
      ObjectSet(ls_0, OBJPROP_CORNER, 0);
      ObjectSet(ls_0, OBJPROP_XDISTANCE, 393);
      ObjectSet(ls_0, OBJPROP_YDISTANCE, 81);
   }
   ObjectSetText(ls_0, "_____________________", 12, "Verdana", Turquoise);
   ls_0 = gs_140 + "L_5";
   if (ObjectFind(ls_0) == -1) {
      ObjectCreate(ls_0, OBJ_LABEL, 0, 0, 0);
      ObjectSet(ls_0, OBJPROP_CORNER, 0);
      ObjectSet(ls_0, OBJPROP_XDISTANCE, 393);
      ObjectSet(ls_0, OBJPROP_YDISTANCE, 84);
   }
   ObjectSetText(ls_0, "___________________", 12, "Verdana", Turquoise);
   ls_0 = gs_140 + "L_6";
   if (ObjectFind(ls_0) == -1) {
      ObjectCreate(ls_0, OBJ_LABEL, 0, 0, 0);
      ObjectSet(ls_0, OBJPROP_CORNER, 0);
      ObjectSet(ls_0, OBJPROP_XDISTANCE, 393);
      ObjectSet(ls_0, OBJPROP_YDISTANCE, 87);
   }
   ObjectSetText(ls_0, "_________________", 12, "Verdana", Turquoise);
}

void f0_8() {
   int li_0;
   int li_4;
   int li_8 = OrdersTotal();
   if (li_8 > 0) {
      for (int li_12 = li_8 - 1; li_12 >= 0; li_12--) {
         if (OrderSelect(li_12, SELECT_BY_POS, MODE_TRADES)) {
            if (OrderSymbol() == Symbol() && OrderType() == OP_SELL && OrderMagicNumber() == gi_148 || OrderMagicNumber() == gi_152) {
               while (IsTradeContextBusy()) Sleep(1000);
               li_0 = TimeCurrent();
               RefreshRates();
               for (int li_16 = OrderClose(OrderTicket(), OrderLots(), Ask, Slippage, Yellow); !li_16 && TimeCurrent() - li_0 <= 120 && !IsTesting(); li_16 = OrderClose(OrderTicket(),
                  OrderLots(), Ask, Slippage, Yellow)) {
                  if (!li_16) {
                     li_4 = GetLastError();
                     Print("Ошибка закрытия ордера SELL #" + OrderTicket() + " ");
                  }
                  Sleep(1000);
                  while (IsTradeContextBusy()) Sleep(500);
                  RefreshRates();
               }
               if (!li_16) {
                  li_4 = GetLastError();
                  Print("Ошибка закрытия ордера SELL #" + OrderTicket() + " ");
               }
            }
         } else Print("Не удалось выбрать открытый ордер:");
      }
   }
}

void f0_25() {
   int li_0;
   int li_4;
   int li_8 = OrdersTotal();
   if (li_8 > 0) {
      for (int li_12 = li_8 - 1; li_12 >= 0; li_12--) {
         if (OrderSelect(li_12, SELECT_BY_POS, MODE_TRADES)) {
            if (OrderSymbol() == Symbol() && OrderType() == OP_BUY && OrderMagicNumber() == gi_148 || OrderMagicNumber() == gi_152) {
               while (IsTradeContextBusy()) Sleep(1000);
               li_0 = TimeCurrent();
               RefreshRates();
               for (int li_16 = OrderClose(OrderTicket(), OrderLots(), Bid, Slippage, Yellow); !li_16 && TimeCurrent() - li_0 <= 120 && !IsTesting(); li_16 = OrderClose(OrderTicket(),
                  OrderLots(), Bid, Slippage, Yellow)) {
                  if (!li_16) {
                     li_4 = GetLastError();
                     Print("Ошибка закрытия ордера BUY #" + OrderTicket() + " ");
                  }
                  Sleep(1000);
                  while (IsTradeContextBusy()) Sleep(1000);
                  RefreshRates();
               }
               if (!li_16) {
                  li_4 = GetLastError();
                  Print("Ошибка закрытия ордера BUY #" + OrderTicket() + " ");
               }
            }
         } else Print("Не удалось выбрать открытый ордер:");
      }
   }
}