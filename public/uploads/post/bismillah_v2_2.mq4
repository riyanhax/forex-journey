/*
   Generated by EX4-TO-MQ4 decompiler V4.0.427.4 [-]
   Website: https://purebeam.biz
   E-mail : purebeam@gmail.com
*/
#property copyright "Copyright © 2012, Mas_Teguh™"
#property link      "teguhjambu@gmail.com"
#property show_inputs

extern string Expert_Comment = "165™";
extern double Lots = 0.02;
extern double TakeProfit = 20.0;
extern double Pips = 7.0;
extern int LotDigit = 2;
extern double Multiplier = 2.0;
extern int MaxTrades = 20;
extern bool UseTrailing = FALSE;
extern double TS_Buy = 5.0;
extern double TS_Sell = 5.0;
extern double Slippage = 3.0;
extern string MACD_Input = "--------------------------------------";
extern double Fast_EMA = 4.0;
extern double Slow_EMA = 12.0;
extern double MACD_SMA = 8.0;
extern bool UseHourTrade = FALSE;
extern int StartHour = 0;
extern int EndHour = 24;
extern bool UseNewsFilter = TRUE;
extern int MinsBeforeNews = 60;
extern int MinsAfterNews = 30;
extern int NewsImpact = 3;
extern int Magic = 20179;
bool gi_216 = FALSE;
double gd_220 = 20.0;
bool gi_228 = FALSE;
bool gi_232 = TRUE;
double gd_236 = 1.0;
double gd_244 = 0.0;
bool gi_252 = FALSE;
bool gi_256 = FALSE;
double gd_260 = 0.0;
bool gi_268 = FALSE;
double g_price_272;
double gd_280;
double gd_unused_288;
double gd_unused_296;
double g_price_304;
double g_bid_312;
double g_ask_320;
double gd_328;
double gd_336;
double gd_344;
bool gi_352;
int g_time_356 = 0;
int gi_360;
int gi_364 = 0;
double gd_368;
int g_pos_376 = 0;
int gi_380;
double gd_384 = 0.0;
bool gi_392 = FALSE;
bool gi_396 = FALSE;
bool gi_400 = FALSE;
int gi_404;
bool gi_408 = FALSE;
int g_datetime_412 = 0;
int g_datetime_416 = 0;
double gd_420;
double gd_428;
double gd_unused_436 = 0.02;
double gd_unused_444 = 0.2;
int gi_unused_452 = 3;
int gi_unused_456 = 6;
int gi_unused_460 = 4;
int gi_unused_464 = 0;
double gd_468;
int g_icustom_476 = 0;
string gs_480 = "2024.04.26 00:00";
int g_minute_488 = -1;

int init() {
   if (Digits == 3 || Digits == 5) gd_468 = 10.0 * Point;
   else gd_468 = Point;
   gd_344 = MarketInfo(Symbol(), MODE_SPREAD) * gd_468;
   if (IsTesting() == TRUE) f0_10();
   if (IsTesting() == FALSE) f0_10();
   return (0);
}

int deinit() {
   return (0);
}

int start() {
   double order_lots_4;
   double order_lots_12;
   double iclose_20;
   double iclose_28;
   double imacd_60;
   double imacd_68;
   double imacd_76;
   int str2time_0 = StrToTime(gs_480);
   if (TimeCurrent() > str2time_0) {
      //Alert("Masa berlaku habis... hubungi 085227507376");
      return (0);
   }
  
   if (gi_216 == TRUE) f0_4();
   if (UseHourTrade) {
      if (!(Hour() >= StartHour && Hour() <= EndHour)) {
         Comment("Non-Trading Hours!");
         return (0);
      }
   }
   if (UseNewsFilter && f0_5()) {
      Comment("Pending news event for ", Symbol(), " in ", g_icustom_476, " minutes...");
      return (0);
   }
   string ls_36 = "false";
   string ls_44 = "false";
   if (gi_268 == FALSE || (gi_268 && (EndHour > StartHour && (Hour() >= StartHour && Hour() <= EndHour)) || (StartHour > EndHour && (!(Hour() >= EndHour && Hour() <= StartHour))))) ls_36 = "true";
   if (gi_268 && (EndHour > StartHour && (!(Hour() >= StartHour && Hour() <= EndHour))) || (StartHour > EndHour && (Hour() >= EndHour && Hour() <= StartHour))) ls_44 = "true";
   if (UseTrailing) f0_17(TS_Buy, TS_Sell, g_price_304);
   if (gi_256)
      if (TimeCurrent() >= gi_360) Print("Closed All due to TimeOut");
   if (g_time_356 == Time[0]) return (0);
   g_time_356 = Time[0];
   double ld_52 = f0_7();
   if (gi_252) {
      if (ld_52 < 0.0 && MathAbs(ld_52) > gd_220 / 100.0 * f0_9()) {
         Print("Closed All due to Stop Out");
         gi_408 = FALSE;
      }
   }
   gi_380 = f0_15();
   if (gi_380 == 0) gi_352 = FALSE;
   for (g_pos_376 = OrdersTotal() - 1; g_pos_376 >= 0; g_pos_376--) {
      OrderSelect(g_pos_376, SELECT_BY_POS, MODE_TRADES);
      if (OrderSymbol() != Symbol() || OrderMagicNumber() != Magic) continue;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == Magic) {
         if (OrderType() == OP_BUY) {
            gi_396 = TRUE;
            gi_400 = FALSE;
            order_lots_4 = OrderLots();
            break;
         }
      }
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == Magic) {
         if (OrderType() == OP_SELL) {
            gi_396 = FALSE;
            gi_400 = TRUE;
            order_lots_12 = OrderLots();
            break;
         }
      }
   }
   if (gi_380 > 0 && gi_380 <= MaxTrades) {
      RefreshRates();
      gd_328 = f0_2();
      gd_336 = f0_8();
      if (gi_396 && gd_328 - Ask >= Pips * gd_468) gi_392 = TRUE;
      if (gi_400 && Bid - gd_336 >= Pips * gd_468) gi_392 = TRUE;
   }
   if (gi_380 < 1) {
      gi_400 = FALSE;
      gi_396 = FALSE;
      gi_392 = TRUE;
      gd_280 = AccountEquity();
   }
   if (gi_392) {
      gd_328 = f0_2();
      gd_336 = f0_8();
      if (gi_400) {
         if (gi_228 || ls_44 == "true") {
            f0_1(0, 1);
            gd_368 = NormalizeDouble(Multiplier * order_lots_12, gd_236);
         } else gd_368 = f0_13(OP_SELL);
         if (gi_232 && ls_36 == "true") {
            gi_364 = gi_380;
            if (gd_368 > 0.0) {
               RefreshRates();
               gi_404 = f0_14(1, gd_368, Bid, Slippage, Ask, 0, 0, Expert_Comment, Magic, 0, HotPink);
               if (gi_404 < 0) {
                  Print("Error: ", GetLastError());
                  return (0);
               }
               gd_336 = f0_8();
               gi_392 = FALSE;
               gi_408 = TRUE;
            }
         }
      } else {
         if (gi_396) {
            if (gi_228 || ls_44 == "true") {
               f0_1(1, 0);
               gd_368 = NormalizeDouble(Multiplier * order_lots_4, gd_236);
            } else gd_368 = f0_13(OP_BUY);
            if (gi_232 && ls_36 == "true") {
               gi_364 = gi_380;
               if (gd_368 > 0.0) {
                  gi_404 = f0_14(0, gd_368, Ask, Slippage, Bid, 0, 0, Expert_Comment, Magic, 0, Lime);
                  if (gi_404 < 0) {
                     Print("Error: ", GetLastError());
                     return (0);
                  }
                  gd_328 = f0_2();
                  gi_392 = FALSE;
                  gi_408 = TRUE;
               }
            }
         }
      }
   }
   if (gi_392 && gi_380 < 1) {
      iclose_20 = iClose(Symbol(), 0, 2);
      iclose_28 = iClose(Symbol(), 0, 1);
      imacd_60 = iMACD(Symbol(), 0, Fast_EMA, Slow_EMA, MACD_SMA, PRICE_LOW, MODE_MAIN, 2);
      imacd_68 = iMACD(Symbol(), 0, Fast_EMA, Slow_EMA, MACD_SMA, PRICE_LOW, MODE_MAIN, 1);
      imacd_76 = iMACD(Symbol(), 0, Fast_EMA, Slow_EMA, MACD_SMA, PRICE_LOW, MODE_SIGNAL, 1);
      g_bid_312 = Bid;
      g_ask_320 = Ask;
      if ((!gi_400) && !gi_396 && ls_36 == "true") {
         gi_364 = gi_380;
         if (iclose_20 > iclose_28 && imacd_76 > imacd_60 > imacd_68) {
            gd_368 = f0_13(OP_SELL);
            if (gd_368 > 0.0) {
               gi_404 = f0_14(1, gd_368, g_bid_312, Slippage, g_bid_312, 0, 0, Expert_Comment, Magic, 0, HotPink);
               if (gi_404 < 0) {
                  Print(gd_368, "Error: ", GetLastError());
                  return (0);
               }
               gd_328 = f0_2();
               gi_408 = TRUE;
            }
         } else {
            if (iclose_20 < iclose_28 && imacd_76 < imacd_60 < imacd_68) {
               gd_368 = f0_13(OP_BUY);
               if (gd_368 > 0.0) {
                  gi_404 = f0_14(0, gd_368, g_ask_320, Slippage, g_ask_320, 0, 0, Expert_Comment, Magic, 0, Lime);
                  if (gi_404 < 0) {
                     Print(gd_368, "Error: ", GetLastError());
                     return (0);
                  }
                  gd_336 = f0_8();
                  gi_408 = TRUE;
               }
            }
         }
      }
      if (gi_404 > 0) gi_360 = TimeCurrent() + 60.0 * (60.0 * gd_260);
      gi_392 = FALSE;
   }
   gi_380 = f0_15();
   g_price_304 = 0;
   double ld_84 = 0;
   for (g_pos_376 = OrdersTotal() - 1; g_pos_376 >= 0; g_pos_376--) {
      OrderSelect(g_pos_376, SELECT_BY_POS, MODE_TRADES);
      if (OrderSymbol() != Symbol() || OrderMagicNumber() != Magic) continue;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == Magic) {
         if (OrderType() == OP_BUY || OrderType() == OP_SELL) {
            g_price_304 += OrderOpenPrice() * OrderLots();
            ld_84 += OrderLots();
         }
      }
   }
   if (gi_380 > 0) g_price_304 = NormalizeDouble(g_price_304 / ld_84, Digits);
   if (gi_408) {
      for (g_pos_376 = OrdersTotal() - 1; g_pos_376 >= 0; g_pos_376--) {
         OrderSelect(g_pos_376, SELECT_BY_POS, MODE_TRADES);
         if (OrderSymbol() != Symbol() || OrderMagicNumber() != Magic) continue;
         if (OrderSymbol() == Symbol() && OrderMagicNumber() == Magic) {
            if (OrderType() == OP_BUY) {
               g_price_272 = g_price_304 + TakeProfit * gd_468;
               gd_unused_288 = g_price_272;
               gd_384 = g_price_304 - gd_244 * gd_468;
               gi_352 = TRUE;
            }
         }
         if (OrderSymbol() == Symbol() && OrderMagicNumber() == Magic) {
            if (OrderType() == OP_SELL) {
               g_price_272 = g_price_304 - TakeProfit * gd_468;
               gd_unused_296 = g_price_272;
               gd_384 = g_price_304 + gd_244 * gd_468;
               gi_352 = TRUE;
            }
         }
      }
   }
   if (gi_408) {
      if (gi_352 == TRUE) {
         for (g_pos_376 = OrdersTotal() - 1; g_pos_376 >= 0; g_pos_376--) {
            OrderSelect(g_pos_376, SELECT_BY_POS, MODE_TRADES);
            if (OrderSymbol() != Symbol() || OrderMagicNumber() != Magic) continue;
            if (OrderSymbol() == Symbol() && OrderMagicNumber() == Magic) OrderModify(OrderTicket(), g_price_304, OrderStopLoss(), g_price_272, 0, Yellow);
            gi_408 = FALSE;
         }
      }
   }
   return (0);
}

double f0_11(double ad_0) {
   return (NormalizeDouble(ad_0, Digits));
}

int f0_1(bool ai_0 = TRUE, bool ai_4 = TRUE) {
   int li_ret_8 = 0;
   for (int pos_12 = OrdersTotal() - 1; pos_12 >= 0; pos_12--) {
      if (OrderSelect(pos_12, SELECT_BY_POS, MODE_TRADES)) {
         if (OrderSymbol() == Symbol() && OrderMagicNumber() == Magic) {
            if (OrderType() == OP_BUY && ai_0) {
               RefreshRates();
               if (!IsTradeContextBusy()) {
                  if (!OrderClose(OrderTicket(), OrderLots(), f0_11(Bid), 5, CLR_NONE)) {
                     Print("Error close BUY " + OrderTicket());
                     li_ret_8 = -1;
                  }
               } else {
                  if (g_datetime_412 == iTime(NULL, 0, 0)) return (-2);
                  g_datetime_412 = iTime(NULL, 0, 0);
                  Print("Need close BUY " + OrderTicket() + ". Trade Context Busy");
                  return (-2);
               }
            }
            if (OrderType() == OP_SELL && ai_4) {
               RefreshRates();
               if (!IsTradeContextBusy()) {
                  if (!(!OrderClose(OrderTicket(), OrderLots(), f0_11(Ask), 5, CLR_NONE))) continue;
                  Print("Error close SELL " + OrderTicket());
                  li_ret_8 = -1;
                  continue;
               }
               if (g_datetime_416 == iTime(NULL, 0, 0)) return (-2);
               g_datetime_416 = iTime(NULL, 0, 0);
               Print("Need close SELL " + OrderTicket() + ". Trade Context Busy");
               return (-2);
            }
         }
      }
   }
   return (li_ret_8);
}

double f0_13(int a_cmd_0) {
   double lots_4;
   int datetime_12;
   switch (LotDigit) {
   case 0:
      lots_4 = Lots;
      break;
   case 1:
      lots_4 = NormalizeDouble(Lots * MathPow(Multiplier, gi_364), gd_236);
      break;
   case 2:
      datetime_12 = 0;
      lots_4 = Lots;
      for (int pos_20 = OrdersHistoryTotal() - 1; pos_20 >= 0; pos_20--) {
         if (!(OrderSelect(pos_20, SELECT_BY_POS, MODE_HISTORY))) return (-3);
         if (OrderSymbol() == Symbol() && OrderMagicNumber() == Magic) {
            if (datetime_12 < OrderCloseTime()) {
               datetime_12 = OrderCloseTime();
               if (OrderProfit() < 0.0) {
                  lots_4 = NormalizeDouble(OrderLots() * Multiplier, gd_236);
                  continue;
               }
               lots_4 = Lots;
               continue;
               return (-3);
            }
         }
      }
   }
   if (AccountFreeMarginCheck(Symbol(), a_cmd_0, lots_4) <= 0.0) return (-1);
   if (GetLastError() == 134/* NOT_ENOUGH_MONEY */) return (-2);
   if (lots_4 < 0.01) lots_4 = 0.01;
   return (lots_4);
}

int f0_15() {
   int count_0 = 0;
   for (int pos_4 = OrdersTotal() - 1; pos_4 >= 0; pos_4--) {
      OrderSelect(pos_4, SELECT_BY_POS, MODE_TRADES);
      if (OrderSymbol() != Symbol() || OrderMagicNumber() != Magic) continue;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == Magic)
         if (OrderType() == OP_SELL || OrderType() == OP_BUY) count_0++;
   }
   return (count_0);
}

void f0_4() {
   for (int pos_0 = OrdersTotal() - 1; pos_0 >= 0; pos_0--) {
      OrderSelect(pos_0, SELECT_BY_POS, MODE_TRADES);
      if (OrderSymbol() == Symbol()) {
         if (OrderSymbol() == Symbol() && OrderMagicNumber() == Magic) {
            if (OrderType() == OP_BUY) OrderClose(OrderTicket(), OrderLots(), Bid, Slippage, Blue);
            if (OrderType() == OP_SELL) OrderClose(OrderTicket(), OrderLots(), Ask, Slippage, Red);
         }
         Sleep(1000);
      }
   }
}

int f0_14(int ai_0, double a_lots_4, double a_price_12, int a_slippage_20, double ad_24, int ai_unused_32, int ai_36, string a_comment_40, int a_magic_48, int a_datetime_52, color a_color_56) {
   int ticket_60 = 0;
   int error_64 = 0;
   int count_68 = 0;
   int li_72 = 100;
   switch (ai_0) {
   case 2:
      for (count_68 = 0; count_68 < li_72; count_68++) {
         ticket_60 = OrderSend(Symbol(), OP_BUYLIMIT, a_lots_4, a_price_12, a_slippage_20, f0_12(ad_24, gd_244), f0_16(a_price_12, ai_36), a_comment_40, a_magic_48, a_datetime_52,
            a_color_56);
         error_64 = GetLastError();
         if (error_64 == 0/* NO_ERROR */) break;
         if (!((error_64 == 4/* SERVER_BUSY */ || error_64 == 137/* BROKER_BUSY */ || error_64 == 146/* TRADE_CONTEXT_BUSY */ || error_64 == 136/* OFF_QUOTES */))) break;
         Sleep(1000);
      }
      break;
   case 4:
      for (count_68 = 0; count_68 < li_72; count_68++) {
         ticket_60 = OrderSend(Symbol(), OP_BUYSTOP, a_lots_4, a_price_12, a_slippage_20, f0_12(ad_24, gd_244), f0_16(a_price_12, ai_36), a_comment_40, a_magic_48, a_datetime_52,
            a_color_56);
         error_64 = GetLastError();
         if (error_64 == 0/* NO_ERROR */) break;
         if (!((error_64 == 4/* SERVER_BUSY */ || error_64 == 137/* BROKER_BUSY */ || error_64 == 146/* TRADE_CONTEXT_BUSY */ || error_64 == 136/* OFF_QUOTES */))) break;
         Sleep(5000);
      }
      break;
   case 0:
      for (count_68 = 0; count_68 < li_72; count_68++) {
         RefreshRates();
         ticket_60 = OrderSend(Symbol(), OP_BUY, a_lots_4, Ask, a_slippage_20, f0_12(Bid, gd_244), f0_16(Ask, ai_36), a_comment_40, a_magic_48, a_datetime_52, a_color_56);
         error_64 = GetLastError();
         if (error_64 == 0/* NO_ERROR */) break;
         if (!((error_64 == 4/* SERVER_BUSY */ || error_64 == 137/* BROKER_BUSY */ || error_64 == 146/* TRADE_CONTEXT_BUSY */ || error_64 == 136/* OFF_QUOTES */))) break;
         Sleep(5000);
      }
      break;
   case 3:
      for (count_68 = 0; count_68 < li_72; count_68++) {
         ticket_60 = OrderSend(Symbol(), OP_SELLLIMIT, a_lots_4, a_price_12, a_slippage_20, f0_0(ad_24, gd_244), f0_6(a_price_12, ai_36), a_comment_40, a_magic_48, a_datetime_52,
            a_color_56);
         error_64 = GetLastError();
         if (error_64 == 0/* NO_ERROR */) break;
         if (!((error_64 == 4/* SERVER_BUSY */ || error_64 == 137/* BROKER_BUSY */ || error_64 == 146/* TRADE_CONTEXT_BUSY */ || error_64 == 136/* OFF_QUOTES */))) break;
         Sleep(5000);
      }
      break;
   case 5:
      for (count_68 = 0; count_68 < li_72; count_68++) {
         ticket_60 = OrderSend(Symbol(), OP_SELLSTOP, a_lots_4, a_price_12, a_slippage_20, f0_0(ad_24, gd_244), f0_6(a_price_12, ai_36), a_comment_40, a_magic_48, a_datetime_52,
            a_color_56);
         error_64 = GetLastError();
         if (error_64 == 0/* NO_ERROR */) break;
         if (!((error_64 == 4/* SERVER_BUSY */ || error_64 == 137/* BROKER_BUSY */ || error_64 == 146/* TRADE_CONTEXT_BUSY */ || error_64 == 136/* OFF_QUOTES */))) break;
         Sleep(5000);
      }
      break;
   case 1:
      for (count_68 = 0; count_68 < li_72; count_68++) {
         ticket_60 = OrderSend(Symbol(), OP_SELL, a_lots_4, Bid, a_slippage_20, f0_0(Ask, gd_244), f0_6(Bid, ai_36), a_comment_40, a_magic_48, a_datetime_52, a_color_56);
         error_64 = GetLastError();
         if (error_64 == 0/* NO_ERROR */) break;
         if (!((error_64 == 4/* SERVER_BUSY */ || error_64 == 137/* BROKER_BUSY */ || error_64 == 146/* TRADE_CONTEXT_BUSY */ || error_64 == 136/* OFF_QUOTES */))) break;
         Sleep(5000);
      }
   }
   return (ticket_60);
}

double f0_12(double ad_0, int ai_8) {
   if (ai_8 == 0) return (0);
   return (ad_0 - ai_8 * gd_468);
}

double f0_0(double ad_0, int ai_8) {
   if (ai_8 == 0) return (0);
   return (ad_0 + ai_8 * gd_468);
}

double f0_16(double ad_0, int ai_8) {
   if (ai_8 == 0) return (0);
   return (ad_0 + ai_8 * gd_468);
}

double f0_6(double ad_0, int ai_8) {
   if (ai_8 == 0) return (0);
   return (ad_0 - ai_8 * gd_468);
}

double f0_7() {
   double ld_ret_0 = 0;
   for (g_pos_376 = OrdersTotal() - 1; g_pos_376 >= 0; g_pos_376--) {
      OrderSelect(g_pos_376, SELECT_BY_POS, MODE_TRADES);
      if (OrderSymbol() != Symbol() || OrderMagicNumber() != Magic) continue;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == Magic)
         if (OrderType() == OP_BUY || OrderType() == OP_SELL) ld_ret_0 += OrderProfit();
   }
   return (ld_ret_0);
}

void f0_17(int ai_0, int ai_4, double a_price_8) {
   int li_16;
   double order_stoploss_20;
   double price_28;
   if (ai_4 != 0) {
      for (int pos_36 = OrdersTotal() - 1; pos_36 >= 0; pos_36--) {
         if (OrderSelect(pos_36, SELECT_BY_POS, MODE_TRADES)) {
            if (OrderSymbol() != Symbol() || OrderMagicNumber() != Magic) continue;
            if (OrderSymbol() == Symbol() || OrderMagicNumber() == Magic) {
               if (OrderType() == OP_BUY) {
                  li_16 = NormalizeDouble((Bid - a_price_8) / gd_468, 0);
                  if (li_16 < ai_0) continue;
                  order_stoploss_20 = OrderStopLoss();
                  price_28 = Bid - ai_4 * gd_468;
                  if (order_stoploss_20 == 0.0 || (order_stoploss_20 != 0.0 && price_28 > order_stoploss_20)) OrderModify(OrderTicket(), a_price_8, price_28, OrderTakeProfit(), 0, Aqua);
               }
               if (OrderType() == OP_SELL) {
                  li_16 = NormalizeDouble((a_price_8 - Ask) / gd_468, 0);
                  if (li_16 < ai_0) continue;
                  order_stoploss_20 = OrderStopLoss();
                  price_28 = Ask + ai_4 * gd_468;
                  if (order_stoploss_20 == 0.0 || (order_stoploss_20 != 0.0 && price_28 < order_stoploss_20)) OrderModify(OrderTicket(), a_price_8, price_28, OrderTakeProfit(), 0, Red);
               }
            }
            Sleep(1000);
         }
      }
   }
}

double f0_9() {
   if (f0_15() == 0) gd_420 = AccountEquity();
   if (gd_420 < gd_428) gd_420 = gd_428;
   else gd_420 = AccountEquity();
   gd_428 = AccountEquity();
   return (gd_420);
}

double f0_2() {
   double order_open_price_0;
   int ticket_8;
   double ld_unused_12 = 0;
   int ticket_20 = 0;
   for (int pos_24 = OrdersTotal() - 1; pos_24 >= 0; pos_24--) {
      OrderSelect(pos_24, SELECT_BY_POS, MODE_TRADES);
      if (OrderSymbol() != Symbol() || OrderMagicNumber() != Magic) continue;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == Magic && OrderType() == OP_BUY) {
         ticket_8 = OrderTicket();
         if (ticket_8 > ticket_20) {
            order_open_price_0 = OrderOpenPrice();
            ld_unused_12 = order_open_price_0;
            ticket_20 = ticket_8;
         }
      }
   }
   return (order_open_price_0);
}

double f0_8() {
   double order_open_price_0;
   int ticket_8;
   double ld_unused_12 = 0;
   int ticket_20 = 0;
   for (int pos_24 = OrdersTotal() - 1; pos_24 >= 0; pos_24--) {
      OrderSelect(pos_24, SELECT_BY_POS, MODE_TRADES);
      if (OrderSymbol() != Symbol() || OrderMagicNumber() != Magic) continue;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == Magic && OrderType() == OP_SELL) {
         ticket_8 = OrderTicket();
         if (ticket_8 > ticket_20) {
            order_open_price_0 = OrderOpenPrice();
            ld_unused_12 = order_open_price_0;
            ticket_20 = ticket_8;
         }
      }
   }
   return (order_open_price_0);
}

int f0_5() {
   int icustom_4;
   int icustom_8;
   bool li_ret_0 = FALSE;
   if (UseNewsFilter && Minute() != g_minute_488 && (!IsTesting())) {
      g_minute_488 = Minute();
      icustom_4 = iCustom(Symbol(), 0, "FFCal", 1, 1, 0, 1, 1, 1, 0);
      g_icustom_476 = iCustom(Symbol(), 0, "FFCal", 1, 1, 0, 1, 1, 1, 1);
      if (g_icustom_476 <= MinsBeforeNews || icustom_4 <= MinsAfterNews) {
         icustom_8 = iCustom(Symbol(), 0, "FFCal", 1, 1, 0, 1, 1, 2, 1);
         if (icustom_8 >= NewsImpact) li_ret_0 = TRUE;
      }
   }
   return (li_ret_0);
}

void f0_10() {
   Comment("Forex Account Server:", AccountServer(), 
      "\n", "Lots: ", Lots, 
      "\n", "Total Profit/Loss: ", AccountProfit(), 
      "\n", "Date: ", Month(), "-", Day(), "-", Year(), " Server Time: ", Hour(), ":", Minute(), ":", Seconds(), 
   "\n");
}


